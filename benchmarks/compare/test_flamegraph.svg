<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="246" onload="init(evt)" viewBox="0 0 1200 246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="246" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">test_flamegraph</text><text id="details" fill="rgb(0,0,0)" x="10" y="229.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="229.00"> </text><svg id="frames" x="10" width="1180" total_samples="37092"><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (66 instructions, 0.18%)</title><rect x="0.0000%" y="117" width="0.1779%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="66"/><text x="0.2500%" y="127.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="0.1779%" y="101" width="0.2561%" height="15" fill="rgb(217,0,24)" fg:x="66" fg:w="95"/><text x="0.4279%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (94 instructions, 0.25%)</title><rect x="0.6416%" y="101" width="0.2534%" height="15" fill="rgb(221,193,54)" fg:x="238" fg:w="94"/><text x="0.8916%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (127 instructions, 0.34%)</title><rect x="1.1054%" y="101" width="0.3424%" height="15" fill="rgb(248,212,6)" fg:x="410" fg:w="127"/><text x="1.3554%" y="111.50"></text></g><g><title>ic_stable_structures::write (548 instructions, 1.48%)</title><rect x="0.1779%" y="117" width="1.4774%" height="15" fill="rgb(208,68,35)" fg:x="66" fg:w="548"/><text x="0.4279%" y="127.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (896 instructions, 2.42%)</title><rect x="0.0000%" y="133" width="2.4156%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="896"/><text x="0.2500%" y="143.50">ic..</text></g><g><title>ic_stable_structures::btreemap::BTreeMap&lt;K,V,M&gt;::allocate_node (974 instructions, 2.63%)</title><rect x="0.0000%" y="149" width="2.6259%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="974"/><text x="0.2500%" y="159.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (107 instructions, 0.29%)</title><rect x="2.6259%" y="133" width="0.2885%" height="15" fill="rgb(228,23,34)" fg:x="974" fg:w="107"/><text x="2.8759%" y="143.50"></text></g><g><title>ic_stable_structures::write (184 instructions, 0.50%)</title><rect x="2.6259%" y="149" width="0.4961%" height="15" fill="rgb(218,30,26)" fg:x="974" fg:w="184"/><text x="2.8759%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (84 instructions, 0.23%)</title><rect x="3.1220%" y="69" width="0.2265%" height="15" fill="rgb(220,122,19)" fg:x="1158" fg:w="84"/><text x="3.3720%" y="79.50"></text></g><g><title>__rdl_alloc (102 instructions, 0.27%)</title><rect x="3.1220%" y="85" width="0.2750%" height="15" fill="rgb(250,228,42)" fg:x="1158" fg:w="102"/><text x="3.3720%" y="95.50"></text></g><g><title>__rust_alloc (107 instructions, 0.29%)</title><rect x="3.1220%" y="101" width="0.2885%" height="15" fill="rgb(240,193,28)" fg:x="1158" fg:w="107"/><text x="3.3720%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.41%)</title><rect x="3.1220%" y="117" width="0.4098%" height="15" fill="rgb(216,20,37)" fg:x="1158" fg:w="152"/><text x="3.3720%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (236 instructions, 0.64%)</title><rect x="3.1220%" y="133" width="0.6363%" height="15" fill="rgb(206,188,39)" fg:x="1158" fg:w="236"/><text x="3.3720%" y="143.50"></text></g><g><title>memcpy (12 instructions, 0.03%)</title><rect x="3.7582%" y="117" width="0.0324%" height="15" fill="rgb(217,207,13)" fg:x="1394" fg:w="12"/><text x="4.0082%" y="127.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="3.7906%" y="85" width="0.2319%" height="15" fill="rgb(231,73,38)" fg:x="1406" fg:w="86"/><text x="4.0406%" y="95.50"></text></g><g><title>ic_stable_structures::write (162 instructions, 0.44%)</title><rect x="3.7906%" y="101" width="0.4368%" height="15" fill="rgb(225,20,46)" fg:x="1406" fg:w="162"/><text x="4.0406%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="4.3513%" y="85" width="0.2319%" height="15" fill="rgb(210,31,41)" fg:x="1614" fg:w="86"/><text x="4.6013%" y="95.50"></text></g><g><title>ic_stable_structures::write (164 instructions, 0.44%)</title><rect x="4.3513%" y="101" width="0.4421%" height="15" fill="rgb(221,200,47)" fg:x="1614" fg:w="164"/><text x="4.6013%" y="111.50"></text></g><g><title>ic_stable_structures::btreemap::node::io::NodeWriter&lt;M&gt;::write (417 instructions, 1.12%)</title><rect x="3.7906%" y="117" width="1.1242%" height="15" fill="rgb(226,26,5)" fg:x="1406" fg:w="417"/><text x="4.0406%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (84 instructions, 0.23%)</title><rect x="4.9148%" y="85" width="0.2265%" height="15" fill="rgb(249,33,26)" fg:x="1823" fg:w="84"/><text x="5.1648%" y="95.50"></text></g><g><title>__rdl_alloc (102 instructions, 0.27%)</title><rect x="4.9148%" y="101" width="0.2750%" height="15" fill="rgb(235,183,28)" fg:x="1823" fg:w="102"/><text x="5.1648%" y="111.50"></text></g><g><title>__rust_alloc (107 instructions, 0.29%)</title><rect x="4.9148%" y="117" width="0.2885%" height="15" fill="rgb(221,5,38)" fg:x="1823" fg:w="107"/><text x="5.1648%" y="127.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (83 instructions, 0.22%)</title><rect x="5.2033%" y="85" width="0.2238%" height="15" fill="rgb(247,18,42)" fg:x="1930" fg:w="83"/><text x="5.4533%" y="95.50"></text></g><g><title>ic_stable_structures::write (160 instructions, 0.43%)</title><rect x="5.2033%" y="101" width="0.4314%" height="15" fill="rgb(241,131,45)" fg:x="1930" fg:w="160"/><text x="5.4533%" y="111.50"></text></g><g><title>ic_stable_structures::btreemap::node::io::NodeWriter&lt;M&gt;::write (205 instructions, 0.55%)</title><rect x="5.2033%" y="117" width="0.5527%" height="15" fill="rgb(249,31,29)" fg:x="1930" fg:w="205"/><text x="5.4533%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (40 instructions, 0.11%)</title><rect x="5.7560%" y="85" width="0.1078%" height="15" fill="rgb(225,111,53)" fg:x="2135" fg:w="40"/><text x="6.0060%" y="95.50"></text></g><g><title>__rdl_dealloc (79 instructions, 0.21%)</title><rect x="5.7560%" y="101" width="0.2130%" height="15" fill="rgb(238,160,17)" fg:x="2135" fg:w="79"/><text x="6.0060%" y="111.50"></text></g><g><title>__rust_dealloc (99 instructions, 0.27%)</title><rect x="5.7560%" y="117" width="0.2669%" height="15" fill="rgb(214,148,48)" fg:x="2135" fg:w="99"/><text x="6.0060%" y="127.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (83 instructions, 0.22%)</title><rect x="6.0229%" y="85" width="0.2238%" height="15" fill="rgb(232,36,49)" fg:x="2234" fg:w="83"/><text x="6.2729%" y="95.50"></text></g><g><title>ic_stable_structures::write (159 instructions, 0.43%)</title><rect x="6.0229%" y="101" width="0.4287%" height="15" fill="rgb(209,103,24)" fg:x="2234" fg:w="159"/><text x="6.2729%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (49 instructions, 0.13%)</title><rect x="6.5755%" y="101" width="0.1321%" height="15" fill="rgb(229,88,8)" fg:x="2439" fg:w="49"/><text x="6.8255%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,079 instructions, 2.91%)</title><rect x="6.7076%" y="85" width="2.9090%" height="15" fill="rgb(213,181,19)" fg:x="2488" fg:w="1079"/><text x="6.9576%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,157 instructions, 3.12%)</title><rect x="6.7076%" y="101" width="3.1193%" height="15" fill="rgb(254,191,54)" fg:x="2488" fg:w="1157"/><text x="6.9576%" y="111.50">ic_..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (83 instructions, 0.22%)</title><rect x="9.8269%" y="101" width="0.2238%" height="15" fill="rgb(241,83,37)" fg:x="3645" fg:w="83"/><text x="10.0769%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (67 instructions, 0.18%)</title><rect x="10.0507%" y="85" width="0.1806%" height="15" fill="rgb(233,36,39)" fg:x="3728" fg:w="67"/><text x="10.3007%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (94 instructions, 0.25%)</title><rect x="10.2313%" y="69" width="0.2534%" height="15" fill="rgb(226,3,54)" fg:x="3795" fg:w="94"/><text x="10.4813%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="10.6950%" y="69" width="0.2561%" height="15" fill="rgb(245,192,40)" fg:x="3967" fg:w="95"/><text x="10.9450%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (127 instructions, 0.34%)</title><rect x="11.1560%" y="69" width="0.3424%" height="15" fill="rgb(238,167,29)" fg:x="4138" fg:w="127"/><text x="11.4060%" y="79.50"></text></g><g><title>ic_stable_structures::write (547 instructions, 1.47%)</title><rect x="10.2313%" y="85" width="1.4747%" height="15" fill="rgb(232,182,51)" fg:x="3795" fg:w="547"/><text x="10.4813%" y="95.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (895 instructions, 2.41%)</title><rect x="10.0507%" y="101" width="2.4129%" height="15" fill="rgb(231,60,39)" fg:x="3728" fg:w="895"/><text x="10.3007%" y="111.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (81 instructions, 0.22%)</title><rect x="12.4636%" y="101" width="0.2184%" height="15" fill="rgb(208,69,12)" fg:x="4623" fg:w="81"/><text x="12.7136%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="12.6820%" y="85" width="0.2346%" height="15" fill="rgb(235,93,37)" fg:x="4704" fg:w="87"/><text x="12.9320%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="13.1214%" y="85" width="0.2319%" height="15" fill="rgb(213,116,39)" fg:x="4867" fg:w="86"/><text x="13.3714%" y="95.50"></text></g><g><title>ic_stable_structures::write (327 instructions, 0.88%)</title><rect x="12.6820%" y="101" width="0.8816%" height="15" fill="rgb(222,207,29)" fg:x="4704" fg:w="327"/><text x="12.9320%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="13.5636%" y="37" width="0.2238%" height="15" fill="rgb(206,96,30)" fg:x="5031" fg:w="83"/><text x="13.8136%" y="47.50"></text></g><g><title>__rdl_alloc (102 instructions, 0.27%)</title><rect x="13.5636%" y="53" width="0.2750%" height="15" fill="rgb(218,138,4)" fg:x="5031" fg:w="102"/><text x="13.8136%" y="63.50"></text></g><g><title>__rust_alloc (107 instructions, 0.29%)</title><rect x="13.5636%" y="69" width="0.2885%" height="15" fill="rgb(250,191,14)" fg:x="5031" fg:w="107"/><text x="13.8136%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.41%)</title><rect x="13.5636%" y="85" width="0.4098%" height="15" fill="rgb(239,60,40)" fg:x="5031" fg:w="152"/><text x="13.8136%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (230 instructions, 0.62%)</title><rect x="13.5636%" y="101" width="0.6201%" height="15" fill="rgb(206,27,48)" fg:x="5031" fg:w="230"/><text x="13.8136%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,091 instructions, 2.94%)</title><rect x="14.1837%" y="85" width="2.9413%" height="15" fill="rgb(225,35,8)" fg:x="5261" fg:w="1091"/><text x="14.4337%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,169 instructions, 3.15%)</title><rect x="14.1837%" y="101" width="3.1516%" height="15" fill="rgb(250,213,24)" fg:x="5261" fg:w="1169"/><text x="14.4337%" y="111.50">ic_..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (83 instructions, 0.22%)</title><rect x="17.3353%" y="101" width="0.2238%" height="15" fill="rgb(247,123,22)" fg:x="6430" fg:w="83"/><text x="17.5853%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (67 instructions, 0.18%)</title><rect x="17.5590%" y="85" width="0.1806%" height="15" fill="rgb(231,138,38)" fg:x="6513" fg:w="67"/><text x="17.8090%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (94 instructions, 0.25%)</title><rect x="17.7397%" y="69" width="0.2534%" height="15" fill="rgb(231,145,46)" fg:x="6580" fg:w="94"/><text x="17.9897%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="18.2034%" y="69" width="0.2561%" height="15" fill="rgb(251,118,11)" fg:x="6752" fg:w="95"/><text x="18.4534%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (127 instructions, 0.34%)</title><rect x="18.6671%" y="69" width="0.3424%" height="15" fill="rgb(217,147,25)" fg:x="6924" fg:w="127"/><text x="18.9171%" y="79.50"></text></g><g><title>ic_stable_structures::write (547 instructions, 1.47%)</title><rect x="17.7397%" y="85" width="1.4747%" height="15" fill="rgb(247,81,37)" fg:x="6580" fg:w="547"/><text x="17.9897%" y="95.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (896 instructions, 2.42%)</title><rect x="17.5590%" y="101" width="2.4156%" height="15" fill="rgb(209,12,38)" fg:x="6513" fg:w="896"/><text x="17.8090%" y="111.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (82 instructions, 0.22%)</title><rect x="19.9747%" y="101" width="0.2211%" height="15" fill="rgb(227,1,9)" fg:x="7409" fg:w="82"/><text x="20.2247%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="20.1957%" y="85" width="0.2346%" height="15" fill="rgb(248,47,43)" fg:x="7491" fg:w="87"/><text x="20.4457%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="20.6352%" y="85" width="0.2346%" height="15" fill="rgb(221,10,30)" fg:x="7654" fg:w="87"/><text x="20.8852%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,091 instructions, 2.94%)</title><rect x="21.0773%" y="85" width="2.9413%" height="15" fill="rgb(210,229,1)" fg:x="7818" fg:w="1091"/><text x="21.3273%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,496 instructions, 4.03%)</title><rect x="20.1957%" y="101" width="4.0332%" height="15" fill="rgb(222,148,37)" fg:x="7491" fg:w="1496"/><text x="20.4457%" y="111.50">ic_s..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (83 instructions, 0.22%)</title><rect x="24.2289%" y="101" width="0.2238%" height="15" fill="rgb(234,67,33)" fg:x="8987" fg:w="83"/><text x="24.4789%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (67 instructions, 0.18%)</title><rect x="24.4527%" y="85" width="0.1806%" height="15" fill="rgb(247,98,35)" fg:x="9070" fg:w="67"/><text x="24.7027%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (94 instructions, 0.25%)</title><rect x="24.6333%" y="69" width="0.2534%" height="15" fill="rgb(247,138,52)" fg:x="9137" fg:w="94"/><text x="24.8833%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,095 instructions, 2.95%)</title><rect x="25.0971%" y="69" width="2.9521%" height="15" fill="rgb(213,79,30)" fg:x="9309" fg:w="1095"/><text x="25.3471%" y="79.50">&lt;ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (127 instructions, 0.34%)</title><rect x="28.2541%" y="69" width="0.3424%" height="15" fill="rgb(246,177,23)" fg:x="10480" fg:w="127"/><text x="28.5041%" y="79.50"></text></g><g><title>ic_stable_structures::write (1,546 instructions, 4.17%)</title><rect x="24.6333%" y="85" width="4.1680%" height="15" fill="rgb(230,62,27)" fg:x="9137" fg:w="1546"/><text x="24.8833%" y="95.50">ic_st..</text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (1,895 instructions, 5.11%)</title><rect x="24.4527%" y="101" width="5.1089%" height="15" fill="rgb(216,154,8)" fg:x="9070" fg:w="1895"/><text x="24.7027%" y="111.50">ic_sta..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (81 instructions, 0.22%)</title><rect x="29.5616%" y="101" width="0.2184%" height="15" fill="rgb(244,35,45)" fg:x="10965" fg:w="81"/><text x="29.8116%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="29.7800%" y="85" width="0.2346%" height="15" fill="rgb(251,115,12)" fg:x="11046" fg:w="87"/><text x="30.0300%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="30.2195%" y="85" width="0.2319%" height="15" fill="rgb(240,54,50)" fg:x="11209" fg:w="86"/><text x="30.4695%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,091 instructions, 2.94%)</title><rect x="30.6616%" y="85" width="2.9413%" height="15" fill="rgb(233,84,52)" fg:x="11373" fg:w="1091"/><text x="30.9116%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,496 instructions, 4.03%)</title><rect x="29.7800%" y="101" width="4.0332%" height="15" fill="rgb(207,117,47)" fg:x="11046" fg:w="1496"/><text x="30.0300%" y="111.50">ic_s..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (82 instructions, 0.22%)</title><rect x="33.8132%" y="101" width="0.2211%" height="15" fill="rgb(249,43,39)" fg:x="12542" fg:w="82"/><text x="34.0632%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (67 instructions, 0.18%)</title><rect x="34.0343%" y="85" width="0.1806%" height="15" fill="rgb(209,38,44)" fg:x="12624" fg:w="67"/><text x="34.2843%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="34.2149%" y="69" width="0.2561%" height="15" fill="rgb(236,212,23)" fg:x="12691" fg:w="95"/><text x="34.4649%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="34.6786%" y="69" width="0.2561%" height="15" fill="rgb(242,79,21)" fg:x="12863" fg:w="95"/><text x="34.9286%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (126 instructions, 0.34%)</title><rect x="35.1397%" y="69" width="0.3397%" height="15" fill="rgb(211,96,35)" fg:x="13034" fg:w="126"/><text x="35.3897%" y="79.50"></text></g><g><title>ic_stable_structures::write (547 instructions, 1.47%)</title><rect x="34.2149%" y="85" width="1.4747%" height="15" fill="rgb(253,215,40)" fg:x="12691" fg:w="547"/><text x="34.4649%" y="95.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (895 instructions, 2.41%)</title><rect x="34.0343%" y="101" width="2.4129%" height="15" fill="rgb(211,81,21)" fg:x="12624" fg:w="895"/><text x="34.2843%" y="111.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (81 instructions, 0.22%)</title><rect x="36.4472%" y="101" width="0.2184%" height="15" fill="rgb(208,190,38)" fg:x="13519" fg:w="81"/><text x="36.6972%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="36.6656%" y="85" width="0.2346%" height="15" fill="rgb(235,213,38)" fg:x="13600" fg:w="87"/><text x="36.9156%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="37.1077%" y="85" width="0.2319%" height="15" fill="rgb(237,122,38)" fg:x="13764" fg:w="86"/><text x="37.3577%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,092 instructions, 2.94%)</title><rect x="37.5499%" y="85" width="2.9440%" height="15" fill="rgb(244,218,35)" fg:x="13928" fg:w="1092"/><text x="37.7999%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,497 instructions, 4.04%)</title><rect x="36.6656%" y="101" width="4.0359%" height="15" fill="rgb(240,68,47)" fg:x="13600" fg:w="1497"/><text x="36.9156%" y="111.50">ic_s..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (82 instructions, 0.22%)</title><rect x="40.7015%" y="101" width="0.2211%" height="15" fill="rgb(210,16,53)" fg:x="15097" fg:w="82"/><text x="40.9515%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (67 instructions, 0.18%)</title><rect x="40.9226%" y="85" width="0.1806%" height="15" fill="rgb(235,124,12)" fg:x="15179" fg:w="67"/><text x="41.1726%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="41.1032%" y="69" width="0.2561%" height="15" fill="rgb(224,169,11)" fg:x="15246" fg:w="95"/><text x="41.3532%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="41.5642%" y="69" width="0.2561%" height="15" fill="rgb(250,166,2)" fg:x="15417" fg:w="95"/><text x="41.8142%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (126 instructions, 0.34%)</title><rect x="42.0279%" y="69" width="0.3397%" height="15" fill="rgb(242,216,29)" fg:x="15589" fg:w="126"/><text x="42.2779%" y="79.50"></text></g><g><title>ic_stable_structures::write (547 instructions, 1.47%)</title><rect x="41.1032%" y="85" width="1.4747%" height="15" fill="rgb(230,116,27)" fg:x="15246" fg:w="547"/><text x="41.3532%" y="95.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (895 instructions, 2.41%)</title><rect x="40.9226%" y="101" width="2.4129%" height="15" fill="rgb(228,99,48)" fg:x="15179" fg:w="895"/><text x="41.1726%" y="111.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (82 instructions, 0.22%)</title><rect x="43.3355%" y="101" width="0.2211%" height="15" fill="rgb(253,11,6)" fg:x="16074" fg:w="82"/><text x="43.5855%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="43.5566%" y="85" width="0.2319%" height="15" fill="rgb(247,143,39)" fg:x="16156" fg:w="86"/><text x="43.8066%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="43.9987%" y="85" width="0.2319%" height="15" fill="rgb(236,97,10)" fg:x="16320" fg:w="86"/><text x="44.2487%" y="95.50"></text></g><g><title>ic_stable_structures::write (328 instructions, 0.88%)</title><rect x="43.5566%" y="101" width="0.8843%" height="15" fill="rgb(233,208,19)" fg:x="16156" fg:w="328"/><text x="43.8066%" y="111.50"></text></g><g><title>__rdl_realloc (113 instructions, 0.30%)</title><rect x="44.4408%" y="53" width="0.3046%" height="15" fill="rgb(216,164,2)" fg:x="16484" fg:w="113"/><text x="44.6908%" y="63.50"></text></g><g><title>__rust_realloc (133 instructions, 0.36%)</title><rect x="44.4408%" y="69" width="0.3586%" height="15" fill="rgb(220,129,5)" fg:x="16484" fg:w="133"/><text x="44.6908%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (185 instructions, 0.50%)</title><rect x="44.4408%" y="85" width="0.4988%" height="15" fill="rgb(242,17,10)" fg:x="16484" fg:w="185"/><text x="44.6908%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (274 instructions, 0.74%)</title><rect x="44.4408%" y="101" width="0.7387%" height="15" fill="rgb(242,107,0)" fg:x="16484" fg:w="274"/><text x="44.6908%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,091 instructions, 2.94%)</title><rect x="45.1796%" y="85" width="2.9413%" height="15" fill="rgb(251,28,31)" fg:x="16758" fg:w="1091"/><text x="45.4296%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,169 instructions, 3.15%)</title><rect x="45.1796%" y="101" width="3.1516%" height="15" fill="rgb(233,223,10)" fg:x="16758" fg:w="1169"/><text x="45.4296%" y="111.50">ic_..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (83 instructions, 0.22%)</title><rect x="48.3312%" y="101" width="0.2238%" height="15" fill="rgb(215,21,27)" fg:x="17927" fg:w="83"/><text x="48.5812%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (67 instructions, 0.18%)</title><rect x="48.5549%" y="85" width="0.1806%" height="15" fill="rgb(232,23,21)" fg:x="18010" fg:w="67"/><text x="48.8049%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (94 instructions, 0.25%)</title><rect x="48.7356%" y="69" width="0.2534%" height="15" fill="rgb(244,5,23)" fg:x="18077" fg:w="94"/><text x="48.9856%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="49.1993%" y="69" width="0.2561%" height="15" fill="rgb(226,81,46)" fg:x="18249" fg:w="95"/><text x="49.4493%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (127 instructions, 0.34%)</title><rect x="49.6603%" y="69" width="0.3424%" height="15" fill="rgb(247,70,30)" fg:x="18420" fg:w="127"/><text x="49.9103%" y="79.50"></text></g><g><title>ic_stable_structures::write (546 instructions, 1.47%)</title><rect x="48.7356%" y="85" width="1.4720%" height="15" fill="rgb(212,68,19)" fg:x="18077" fg:w="546"/><text x="48.9856%" y="95.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (895 instructions, 2.41%)</title><rect x="48.5549%" y="101" width="2.4129%" height="15" fill="rgb(240,187,13)" fg:x="18010" fg:w="895"/><text x="48.8049%" y="111.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (81 instructions, 0.22%)</title><rect x="50.9679%" y="101" width="0.2184%" height="15" fill="rgb(223,113,26)" fg:x="18905" fg:w="81"/><text x="51.2179%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="51.1862%" y="85" width="0.2346%" height="15" fill="rgb(206,192,2)" fg:x="18986" fg:w="87"/><text x="51.4362%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="51.6257%" y="85" width="0.2319%" height="15" fill="rgb(241,108,4)" fg:x="19149" fg:w="86"/><text x="51.8757%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,091 instructions, 2.94%)</title><rect x="52.0678%" y="85" width="2.9413%" height="15" fill="rgb(247,173,49)" fg:x="19313" fg:w="1091"/><text x="52.3178%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,496 instructions, 4.03%)</title><rect x="51.1862%" y="101" width="4.0332%" height="15" fill="rgb(224,114,35)" fg:x="18986" fg:w="1496"/><text x="51.4362%" y="111.50">ic_s..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (82 instructions, 0.22%)</title><rect x="55.2195%" y="101" width="0.2211%" height="15" fill="rgb(245,159,27)" fg:x="20482" fg:w="82"/><text x="55.4695%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (67 instructions, 0.18%)</title><rect x="55.4405%" y="85" width="0.1806%" height="15" fill="rgb(245,172,44)" fg:x="20564" fg:w="67"/><text x="55.6905%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="55.6212%" y="69" width="0.2561%" height="15" fill="rgb(236,23,11)" fg:x="20631" fg:w="95"/><text x="55.8712%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,095 instructions, 2.95%)</title><rect x="56.0849%" y="69" width="2.9521%" height="15" fill="rgb(205,117,38)" fg:x="20803" fg:w="1095"/><text x="56.3349%" y="79.50">&lt;ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (126 instructions, 0.34%)</title><rect x="59.2419%" y="69" width="0.3397%" height="15" fill="rgb(237,72,25)" fg:x="21974" fg:w="126"/><text x="59.4919%" y="79.50"></text></g><g><title>ic_stable_structures::write (1,547 instructions, 4.17%)</title><rect x="55.6212%" y="85" width="4.1707%" height="15" fill="rgb(244,70,9)" fg:x="20631" fg:w="1547"/><text x="55.8712%" y="95.50">ic_st..</text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (1,895 instructions, 5.11%)</title><rect x="55.4405%" y="101" width="5.1089%" height="15" fill="rgb(217,125,39)" fg:x="20564" fg:w="1895"/><text x="55.6905%" y="111.50">ic_sta..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (81 instructions, 0.22%)</title><rect x="60.5494%" y="101" width="0.2184%" height="15" fill="rgb(235,36,10)" fg:x="22459" fg:w="81"/><text x="60.7994%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="60.7678%" y="85" width="0.2346%" height="15" fill="rgb(251,123,47)" fg:x="22540" fg:w="87"/><text x="61.0178%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="61.2100%" y="85" width="0.2319%" height="15" fill="rgb(221,13,13)" fg:x="22704" fg:w="86"/><text x="61.4600%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,092 instructions, 2.94%)</title><rect x="61.6521%" y="85" width="2.9440%" height="15" fill="rgb(238,131,9)" fg:x="22868" fg:w="1092"/><text x="61.9021%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,497 instructions, 4.04%)</title><rect x="60.7678%" y="101" width="4.0359%" height="15" fill="rgb(211,50,8)" fg:x="22540" fg:w="1497"/><text x="61.0178%" y="111.50">ic_s..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (82 instructions, 0.22%)</title><rect x="64.8037%" y="101" width="0.2211%" height="15" fill="rgb(245,182,24)" fg:x="24037" fg:w="82"/><text x="65.0537%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (67 instructions, 0.18%)</title><rect x="65.0248%" y="85" width="0.1806%" height="15" fill="rgb(242,14,37)" fg:x="24119" fg:w="67"/><text x="65.2748%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="65.2054%" y="69" width="0.2561%" height="15" fill="rgb(246,228,12)" fg:x="24186" fg:w="95"/><text x="65.4554%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="65.6665%" y="69" width="0.2561%" height="15" fill="rgb(213,55,15)" fg:x="24357" fg:w="95"/><text x="65.9165%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (126 instructions, 0.34%)</title><rect x="66.1302%" y="69" width="0.3397%" height="15" fill="rgb(209,9,3)" fg:x="24529" fg:w="126"/><text x="66.3802%" y="79.50"></text></g><g><title>ic_stable_structures::write (547 instructions, 1.47%)</title><rect x="65.2054%" y="85" width="1.4747%" height="15" fill="rgb(230,59,30)" fg:x="24186" fg:w="547"/><text x="65.4554%" y="95.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (895 instructions, 2.41%)</title><rect x="65.0248%" y="101" width="2.4129%" height="15" fill="rgb(209,121,21)" fg:x="24119" fg:w="895"/><text x="65.2748%" y="111.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (81 instructions, 0.22%)</title><rect x="67.4377%" y="101" width="0.2184%" height="15" fill="rgb(220,109,13)" fg:x="25014" fg:w="81"/><text x="67.6877%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="67.6561%" y="85" width="0.2319%" height="15" fill="rgb(232,18,1)" fg:x="25095" fg:w="86"/><text x="67.9061%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="68.0982%" y="85" width="0.2319%" height="15" fill="rgb(215,41,42)" fg:x="25259" fg:w="86"/><text x="68.3482%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,092 instructions, 2.94%)</title><rect x="68.5404%" y="85" width="2.9440%" height="15" fill="rgb(224,123,36)" fg:x="25423" fg:w="1092"/><text x="68.7904%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,496 instructions, 4.03%)</title><rect x="67.6561%" y="101" width="4.0332%" height="15" fill="rgb(240,125,3)" fg:x="25095" fg:w="1496"/><text x="67.9061%" y="111.50">ic_s..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (82 instructions, 0.22%)</title><rect x="71.6893%" y="101" width="0.2211%" height="15" fill="rgb(205,98,50)" fg:x="26591" fg:w="82"/><text x="71.9393%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (66 instructions, 0.18%)</title><rect x="71.9104%" y="85" width="0.1779%" height="15" fill="rgb(205,185,37)" fg:x="26673" fg:w="66"/><text x="72.1604%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="72.0883%" y="69" width="0.2561%" height="15" fill="rgb(238,207,15)" fg:x="26739" fg:w="95"/><text x="72.3383%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (94 instructions, 0.25%)</title><rect x="72.5493%" y="69" width="0.2534%" height="15" fill="rgb(213,199,42)" fg:x="26910" fg:w="94"/><text x="72.7993%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (126 instructions, 0.34%)</title><rect x="73.0130%" y="69" width="0.3397%" height="15" fill="rgb(235,201,11)" fg:x="27082" fg:w="126"/><text x="73.2630%" y="79.50"></text></g><g><title>ic_stable_structures::write (547 instructions, 1.47%)</title><rect x="72.0883%" y="85" width="1.4747%" height="15" fill="rgb(207,46,11)" fg:x="26739" fg:w="547"/><text x="72.3383%" y="95.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (896 instructions, 2.42%)</title><rect x="71.9104%" y="101" width="2.4156%" height="15" fill="rgb(241,35,35)" fg:x="26673" fg:w="896"/><text x="72.1604%" y="111.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (82 instructions, 0.22%)</title><rect x="74.3260%" y="101" width="0.2211%" height="15" fill="rgb(243,32,47)" fg:x="27569" fg:w="82"/><text x="74.5760%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="74.5471%" y="85" width="0.2319%" height="15" fill="rgb(247,202,23)" fg:x="27651" fg:w="86"/><text x="74.7971%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="74.9892%" y="85" width="0.2346%" height="15" fill="rgb(219,102,11)" fg:x="27815" fg:w="87"/><text x="75.2392%" y="95.50"></text></g><g><title>ic_stable_structures::write (328 instructions, 0.88%)</title><rect x="74.5471%" y="101" width="0.8843%" height="15" fill="rgb(243,110,44)" fg:x="27651" fg:w="328"/><text x="74.7971%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.24%)</title><rect x="75.4314%" y="37" width="0.2399%" height="15" fill="rgb(222,74,54)" fg:x="27979" fg:w="89"/><text x="75.6814%" y="47.50"></text></g><g><title>memcpy (329 instructions, 0.89%)</title><rect x="75.6713%" y="37" width="0.8870%" height="15" fill="rgb(216,99,12)" fg:x="28068" fg:w="329"/><text x="75.9213%" y="47.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (68 instructions, 0.18%)</title><rect x="76.5583%" y="37" width="0.1833%" height="15" fill="rgb(226,22,26)" fg:x="28397" fg:w="68"/><text x="76.8083%" y="47.50"></text></g><g><title>__rdl_realloc (637 instructions, 1.72%)</title><rect x="75.4314%" y="53" width="1.7174%" height="15" fill="rgb(217,163,10)" fg:x="27979" fg:w="637"/><text x="75.6814%" y="63.50"></text></g><g><title>__rust_realloc (658 instructions, 1.77%)</title><rect x="75.4314%" y="69" width="1.7740%" height="15" fill="rgb(213,25,53)" fg:x="27979" fg:w="658"/><text x="75.6814%" y="79.50">_..</text></g><g><title>alloc::raw_vec::finish_grow (710 instructions, 1.91%)</title><rect x="75.4314%" y="85" width="1.9142%" height="15" fill="rgb(252,105,26)" fg:x="27979" fg:w="710"/><text x="75.6814%" y="95.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (798 instructions, 2.15%)</title><rect x="75.4314%" y="101" width="2.1514%" height="15" fill="rgb(220,39,43)" fg:x="27979" fg:w="798"/><text x="75.6814%" y="111.50">a..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (1,092 instructions, 2.94%)</title><rect x="77.5828%" y="85" width="2.9440%" height="15" fill="rgb(229,68,48)" fg:x="28777" fg:w="1092"/><text x="77.8328%" y="95.50">&lt;i..</text></g><g><title>ic_stable_structures::write (1,168 instructions, 3.15%)</title><rect x="77.5828%" y="101" width="3.1489%" height="15" fill="rgb(252,8,32)" fg:x="28777" fg:w="1168"/><text x="77.8328%" y="111.50">ic_..</text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (83 instructions, 0.22%)</title><rect x="80.7317%" y="101" width="0.2238%" height="15" fill="rgb(223,20,43)" fg:x="29945" fg:w="83"/><text x="80.9817%" y="111.50"></text></g><g><title>ic_stable_structures::memory_manager::MemoryManagerInner&lt;M&gt;::read_unsafe (66 instructions, 0.18%)</title><rect x="80.9555%" y="85" width="0.1779%" height="15" fill="rgb(229,81,49)" fg:x="30028" fg:w="66"/><text x="81.2055%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (95 instructions, 0.26%)</title><rect x="81.1334%" y="69" width="0.2561%" height="15" fill="rgb(236,28,36)" fg:x="30094" fg:w="95"/><text x="81.3834%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (94 instructions, 0.25%)</title><rect x="81.5944%" y="69" width="0.2534%" height="15" fill="rgb(249,185,26)" fg:x="30265" fg:w="94"/><text x="81.8444%" y="79.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (126 instructions, 0.34%)</title><rect x="82.0581%" y="69" width="0.3397%" height="15" fill="rgb(249,174,33)" fg:x="30437" fg:w="126"/><text x="82.3081%" y="79.50"></text></g><g><title>ic_stable_structures::write (547 instructions, 1.47%)</title><rect x="81.1334%" y="85" width="1.4747%" height="15" fill="rgb(233,201,37)" fg:x="30094" fg:w="547"/><text x="81.3834%" y="95.50"></text></g><g><title>ic_stable_structures::btreemap::allocator::Allocator&lt;M&gt;::allocate (896 instructions, 2.42%)</title><rect x="80.9555%" y="101" width="2.4156%" height="15" fill="rgb(221,78,26)" fg:x="30028" fg:w="896"/><text x="81.2055%" y="111.50">ic..</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (82 instructions, 0.22%)</title><rect x="83.3711%" y="101" width="0.2211%" height="15" fill="rgb(250,127,30)" fg:x="30924" fg:w="82"/><text x="83.6211%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (86 instructions, 0.23%)</title><rect x="83.5921%" y="85" width="0.2319%" height="15" fill="rgb(230,49,44)" fg:x="31006" fg:w="86"/><text x="83.8421%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="84.0343%" y="85" width="0.2346%" height="15" fill="rgb(229,67,23)" fg:x="31170" fg:w="87"/><text x="84.2843%" y="95.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (201 instructions, 0.54%)</title><rect x="84.4737%" y="85" width="0.5419%" height="15" fill="rgb(249,83,47)" fg:x="31333" fg:w="201"/><text x="84.7237%" y="95.50"></text></g><g><title>ic_stable_structures::write (605 instructions, 1.63%)</title><rect x="83.5921%" y="101" width="1.6311%" height="15" fill="rgb(215,43,3)" fg:x="31006" fg:w="605"/><text x="83.8421%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::btreemap::node::io::NodeIterator as core::iter::traits::iterator::Iterator&gt;::next (5 instructions, 0.01%)</title><rect x="85.2232%" y="101" width="0.0135%" height="15" fill="rgb(238,154,13)" fg:x="31611" fg:w="5"/><text x="85.4732%" y="111.50"></text></g><g><title>ic_stable_structures::btreemap::node::io::NodeWriter&lt;M&gt;::write (32,289 instructions, 87.05%)</title><rect x="6.0229%" y="117" width="87.0511%" height="15" fill="rgb(219,56,2)" fg:x="2234" fg:w="32289"/><text x="6.2729%" y="127.50">ic_stable_structures::btreemap::node::io::NodeWriter&lt;M&gt;::write</text></g><g><title>ic_stable_structures::btreemap::node::io::compute_num_overflow_pages_needed (36 instructions, 0.10%)</title><rect x="93.0740%" y="101" width="0.0971%" height="15" fill="rgb(233,0,4)" fg:x="34523" fg:w="36"/><text x="93.3240%" y="111.50"></text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (87 instructions, 0.23%)</title><rect x="93.1710%" y="85" width="0.2346%" height="15" fill="rgb(235,30,7)" fg:x="34559" fg:w="87"/><text x="93.4210%" y="95.50"></text></g><g><title>ic_stable_structures::write (163 instructions, 0.44%)</title><rect x="93.1710%" y="101" width="0.4394%" height="15" fill="rgb(250,79,13)" fg:x="34559" fg:w="163"/><text x="93.4210%" y="111.50"></text></g><g><title>ic_stable_structures::btreemap::node::io::NodeWriter&lt;M&gt;::deallocate_unused_pages (287 instructions, 0.77%)</title><rect x="93.0740%" y="117" width="0.7738%" height="15" fill="rgb(211,146,34)" fg:x="34523" fg:w="287"/><text x="93.3240%" y="127.50"></text></g><g><title>ic_stable_structures::btreemap::node::Node&lt;K&gt;::save (34,167 instructions, 92.11%)</title><rect x="3.7582%" y="133" width="92.1142%" height="15" fill="rgb(228,22,38)" fg:x="1394" fg:w="34167"/><text x="4.0082%" y="143.50">ic_stable_structures::btreemap::node::Node&lt;K&gt;::save</text></g><g><title>&lt;ic_stable_structures::memory_manager::VirtualMemory&lt;M&gt; as ic_stable_structures::Memory&gt;::write (107 instructions, 0.29%)</title><rect x="95.8724%" y="117" width="0.2885%" height="15" fill="rgb(235,168,5)" fg:x="35561" fg:w="107"/><text x="96.1224%" y="127.50"></text></g><g><title>ic_stable_structures::write (184 instructions, 0.50%)</title><rect x="95.8724%" y="133" width="0.4961%" height="15" fill="rgb(221,155,16)" fg:x="35561" fg:w="184"/><text x="96.1224%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (65 instructions, 0.18%)</title><rect x="96.3685%" y="85" width="0.1752%" height="15" fill="rgb(215,215,53)" fg:x="35745" fg:w="65"/><text x="96.6185%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (119 instructions, 0.32%)</title><rect x="96.3685%" y="101" width="0.3208%" height="15" fill="rgb(223,4,10)" fg:x="35745" fg:w="119"/><text x="96.6185%" y="111.50"></text></g><g><title>__rdl_dealloc (157 instructions, 0.42%)</title><rect x="96.3685%" y="117" width="0.4233%" height="15" fill="rgb(234,103,6)" fg:x="35745" fg:w="157"/><text x="96.6185%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (19 instructions, 0.05%)</title><rect x="96.8457%" y="85" width="0.0512%" height="15" fill="rgb(227,97,0)" fg:x="35922" fg:w="19"/><text x="97.0957%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (65 instructions, 0.18%)</title><rect x="96.8969%" y="85" width="0.1752%" height="15" fill="rgb(234,150,53)" fg:x="35941" fg:w="65"/><text x="97.1469%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (172 instructions, 0.46%)</title><rect x="96.8457%" y="101" width="0.4637%" height="15" fill="rgb(228,201,54)" fg:x="35922" fg:w="172"/><text x="97.0957%" y="111.50"></text></g><g><title>__rdl_dealloc (210 instructions, 0.57%)</title><rect x="96.8457%" y="117" width="0.5662%" height="15" fill="rgb(222,22,37)" fg:x="35922" fg:w="210"/><text x="97.0957%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (57 instructions, 0.15%)</title><rect x="97.4658%" y="85" width="0.1537%" height="15" fill="rgb(237,53,32)" fg:x="36152" fg:w="57"/><text x="97.7158%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (133 instructions, 0.36%)</title><rect x="97.4658%" y="101" width="0.3586%" height="15" fill="rgb(233,25,53)" fg:x="36152" fg:w="133"/><text x="97.7158%" y="111.50"></text></g><g><title>__rdl_dealloc (172 instructions, 0.46%)</title><rect x="97.4658%" y="117" width="0.4637%" height="15" fill="rgb(210,40,34)" fg:x="36152" fg:w="172"/><text x="97.7158%" y="127.50"></text></g><g><title>__rust_dealloc (599 instructions, 1.61%)</title><rect x="96.3685%" y="133" width="1.6149%" height="15" fill="rgb(241,220,44)" fg:x="35745" fg:w="599"/><text x="96.6185%" y="143.50"></text></g><g><title>ic_stable_structures::btreemap::BTreeMap&lt;K,V,M&gt;::insert_nonfull (35,519 instructions, 95.76%)</title><rect x="3.1220%" y="149" width="95.7592%" height="15" fill="rgb(235,28,35)" fg:x="1158" fg:w="35519"/><text x="3.3720%" y="159.50">ic_stable_structures::btreemap::BTreeMap&lt;K,V,M&gt;::insert_nonfull</text></g><g><title>ic_stable_structures::btreemap::BTreeMap&lt;K,V,M&gt;::insert (36,838 instructions, 99.32%)</title><rect x="0.0000%" y="165" width="99.3152%" height="15" fill="rgb(210,56,17)" fg:x="0" fg:w="36838"/><text x="0.2500%" y="175.50">ic_stable_structures::btreemap::BTreeMap&lt;K,V,M&gt;::insert</text></g><g><title>all (37,092 instructions, 100%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(224,130,29)" fg:x="0" fg:w="37092"/><text x="0.2500%" y="207.50"></text></g><g><title>test_flamegraph (37,092 instructions, 100.00%)</title><rect x="0.0000%" y="181" width="100.0000%" height="15" fill="rgb(235,212,8)" fg:x="0" fg:w="37092"/><text x="0.2500%" y="191.50">test_flamegraph</text></g></svg></svg>